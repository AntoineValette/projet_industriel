services:

  # PostgreSQL Database
  postgres:
    image: postgres:17.2
    container_name: my_postgres
    env_file:
      - ./environment/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:8.14.0
    container_name: my_pgadmin
    env_file:
      - ./environment/.env
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - ./environment/servers.json:/pgadmin4/servers.json

  # Kafka Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: my_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: my_kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  # Python Producer
  producer:
    build:
      context: ./python_script
    container_name: my_python_producer
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./python_script:/app
      - ./kafka:/app/kafka
      - ../../data:/data
    entrypoint: ["/bin/bash", "/app/kafka/producer/producer_entrypoint.sh"]

  # Python Consumer (for consuming Kafka messages and inserting into PostgreSQL)
  consumer:
    build:
      context: ./python_script
    container_name: my_python_consumer
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./python_script:/app
      - ./kafka:/app/kafka
    entrypoint: ["/bin/bash", "/app/kafka/consumer/consumer_entrypoint.sh"]

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: my_grafana
    ports:
      - "3000:3000"
    env_file:
      - ./environment/.env
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - postgres


volumes:
  postgres-data:
  grafana-data:
